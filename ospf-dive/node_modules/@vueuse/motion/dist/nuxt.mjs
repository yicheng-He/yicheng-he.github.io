import { resolve } from 'path';
import { fileURLToPath } from 'url';
import { defineNuxtModule, addTemplate, addPluginTemplate } from '@nuxt/kit';

const DEFAULTS = {};
const CONFIG_KEY = "motion";
const module = defineNuxtModule({
  meta: {
    name: "@vueuse/motion",
    configKey: CONFIG_KEY,
    compatibility: {
      nuxt: ">=3.0.0",
      bridge: true
    }
  },
  defaults: DEFAULTS,
  setup(options, nuxt) {
    const templatesDir = fileURLToPath(new URL("./templates", import.meta.url).toString());
    addTemplate({
      fileName: "motion.config.js",
      src: resolve(templatesDir, "motion.config.js")
    });
    addPluginTemplate({
      src: resolve(templatesDir, "motion.js"),
      fileName: "motion.js",
      options
    });
    if (!nuxt.options.build.transpile)
      nuxt.options.build.transpile = [];
    const transpileList = ["defu", "@vueuse/motion", "@vueuse/shared", "@vueuse/core"];
    transpileList.forEach((pkgName) => {
      if (!nuxt.options.build.transpile.includes(pkgName))
        nuxt.options.build.transpile.push(pkgName);
    });
    if (!nuxt.options.alias)
      nuxt.options.alias = {};
    if (!nuxt.options.alias.tslib)
      nuxt.options.alias.tslib = "tslib/tslib.es6.js";
  }
});

export { module as default };
